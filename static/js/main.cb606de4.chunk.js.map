{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","className","React","Component","App","clockName","Math","random","isClockVisible","clockOnOff","randomName","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAbP,gCAgBE,SAAmBC,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DP,KAAKQ,MAAMD,SAnBhF,kCAuBE,WACMP,KAAKD,SACPU,cAAcT,KAAKD,WAzBzB,oBA6BE,WACE,OACE,sBAAMW,UAAU,OAAhB,SAAwBV,KAAKJ,MAAMC,KAAKQ,2BA/B9C,GAA2BM,IAAMC,WCEpBC,G,MAAb,4MACEjB,MAAe,CACbkB,UAAWC,KAAKC,SAChBC,gBAAgB,GAHpB,EAMEC,WAAa,SAACD,GACZ,EAAKf,SAAS,CACZe,oBARN,EAYEE,WAAa,WACX,EAAKjB,SAAS,CACZY,UAAWC,KAAKC,YAdtB,4CAkBE,WAAU,IAAD,OACCC,EAAmBjB,KAAKJ,MAAxBqB,eAER,OACE,sBAAKP,UAAU,MAAf,UACE,6CACA,8CAEG,IACAO,GAAmB,cAAC,EAAD,CAAOV,KAAMP,KAAKJ,MAAMkB,eAE9C,wBACEM,KAAK,SACLC,QAAS,WACP,EAAKH,YAAW,IAHpB,wBAQA,wBACEE,KAAK,SACLC,QAAS,WACP,EAAKH,YAAW,IAHpB,wBAQA,8BACE,wBACEE,KAAK,SACLC,QAASrB,KAAKmB,WAFhB,sCA9CV,GAAyBR,IAAMC,YCT/BU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cb606de4.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <span className=\"time\">{this.state.date.toLocaleTimeString()}</span>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\ntype Props = {};\n\ntype State = {\n  clockName: number;\n  isClockVisible: boolean;\n};\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    clockName: Math.random(),\n    isClockVisible: true,\n  };\n\n  clockOnOff = (isClockVisible: boolean) => {\n    this.setState({\n      isClockVisible,\n    });\n  };\n\n  randomName = () => {\n    this.setState({\n      clockName: Math.random(),\n    });\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible && (<Clock name={this.state.clockName} />)}\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.clockOnOff(true);\n          }}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.clockOnOff(false);\n          }}\n        >\n          Hide Clock\n        </button>\n        <div>\n          <button\n            type=\"button\"\n            onClick={this.randomName}\n          >\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}